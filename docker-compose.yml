version: "3.8"

services:
  frontend:
    container_name: frontend
    build: './projects/ui'
    ports:
      - 4201:4201
    volumes:
      - ./projects/ui:/app/ui
      - /app/ui/node_modules
    environment:
      - NODE_ENV=dev
      - KEYCLOAK_URL=http://localhost:8080
      - KEYCLOAK_REALM=dddapp
      - KEYCLOAK_CLIENT_ID=frontend
      - BACKEND_BASE_PATH=http://localhost:3001
      - PORT=4201
    depends_on:
      - keycloak
      - backend

  backend:
    container_name: backend
    build: './projects/api'
    ports:
      - 3001:3001
    volumes:
      - ./projects/api:/app/api
      - /app/api/node_modules
    environment:
      - APP_NAME=dddapp
      - KEYCLOAK_URL=http://localhost:8080
      - KEYCLOAK_REALM=dddapp
      - PORT=3001
    depends_on:
      - keycloak
      - arangodb

  keycloak:
    build: './infra/keycloak'
    container_name: keycloak
    ports:
      - 8080:8080
      - 8787:8787
    environment:
      - KEYCLOAK_USER=admin
      - KEYCLOAK_PASSWORD=admin
      - DB_VENDOR=postgres
      - DB_ADDR=postgres
      - DB_DATABASE=keycloak
      - DB_USER=keycloak
      - DB_PASSWORD=keycloak
      - DEBUG=true
      - DEBUG_PORT='*:8787'
      - KEYCLOAK_LOGLEVEL='ALL'
      - KEYCLOAK_IMPORT=/tmp/realm-dev.json
    volumes:
      - ./infra/keycloak/realm-dev.json:/tmp/realm-dev.json
    command: [ "-Dkeycloak.profile.feature.upload_scripts=enabled" ]
    depends_on:
      - postgres
      - mailhog

  arangodb:
    build: './arangodb'
    container_name: arangodb
    restart: always
    ports:
      - 8529:8529
    environment:
      - ARANGO_ROOT_PASSWORD=password
    volumes:
      - arangodb_data:/var/lib/arangodb3

  postgres:
    image: postgres:13.0-alpine
    container_name: postgres
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./infra/postgres:/docker-entrypoint-initdb.d

  mailhog:
    container_name: mailhog
    build: './mail'
    ports:
      - 1025:1025
      - 8025:8025

volumes:
  postgres:
  arangodb_data:
